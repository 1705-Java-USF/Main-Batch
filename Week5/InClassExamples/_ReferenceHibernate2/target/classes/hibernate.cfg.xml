<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration> 			<!-- ROOT TAG -->
	<session-factory>				<!-- configuration for the session factory -->

		<!-- DB Configuration -->
		<property name="hibernate.connection.driver_class">oracle.jdbc.OracleDriver</property>
		<property name="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</property>
		<property name="hibernate.connection.url">jdbc:oracle:thin:@localhost:1521:xe</property>
		<property name="hibernate.connection.username">chinook</property>
		<property name="hibernate.connection.password">p4ssw0rd</property>
		<property name="hibernate.connection.pool_size">10</property>

		<property name="show_sql">true</property><!--  Queries display in console that are written for you -->
		<property name="hibernate.hbm2ddl.auto">update</property> <!-- Specify ddl approach -->
		<!-- 
			create: Purge databse that current project uses if it already exists
			Update: Simply add onto existing data
			Validate: simply validates the DB, no changes applied
			create-drop: Database is create, then purged upon application end -->

		<!-- Setting up a second level cache -->
		<!-- For configuration purposes, it requires the following 2 lines:  -->
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>
		<!-- First propert indicates the use of a 2nd level cache
			 Second Line dictates which cahce provider to use -->
		<!-- Some examples of a 2nd level cache providers are:
					|read-only	|non-structured-write |read-write | transactional
		EHCache		|	X		| 			X		  |	X		  | 
		OSCache		|	X		|			X		  | 	X	  |
		SwarmCache	|	X		|			X		  
		JBossCache 	|	X		|					  |			  |			X
		-->
		
		<!-- mAPPING classes WITH HIBERNATE -->
		<mapping class="com.example.bean.Bear" />
		<mapping class="com.example.bean.Cave" />
		<mapping class="com.example.bean.HoneyPot" />


	</session-factory>
</hibernate-configuration>